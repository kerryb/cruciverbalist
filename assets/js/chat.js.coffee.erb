window.setupChat = ->
  conversationId = $("#conversation").attr("data-id")
  window.Message = Backbone.Model.extend
    url: "/conversation/#{conversationId}/messages"

  window.Conversation = Backbone.Collection.extend
    model: Message

  MessageView = Backbone.View.extend
    tagName: "li"
    template: $("#message-template").template()

    render: ->
      conversation_list = $("#conversation")
      element = jQuery.tmpl(@template, @model.toJSON())
      $(@el).html element
      setTimeout (->
        conversation_list.scrollTop(conversation_list.attr("scrollHeight") - conversation_list.height())
      ), 100
      this

  AppView = Backbone.View.extend
    el: $("#chat")

    initialize: ->
      _.bindAll this, "addMessage"
      @conversation = new Conversation [], view: this
      @conversation.each @addMessage
      @input = @$("#new-message")
      @input.focus()

    events:
      "keypress #new-message": "createOnEnter"

    createOnEnter: (e) ->
      return unless e.keyCode is 13
      value = @input.val()
      return unless value
      @conversation.create content: value
      @input.val ""
      e.preventDefault()

    addMessage: (message) ->
      view = new MessageView(model: message)
      @$("#conversation").append view.render().el

  appview = new AppView

  pusher = new Pusher "<%= Pusher.key %>"
  channel = pusher.subscribe "conversation-#{conversationId}"
  channel.bind "new-chat-message", (data) ->
    appview.addMessage new Message(JSON.parse(data.message))
